100: "begin_block,program,_,_"
101: "begin_block,max3,_,_"
102: "+,counterFunctionCalls,1,T_0"
103: "=,T_0,_,counterFunctionCalls"
104: ">,x,y,_"
105: "jump,_,_,_"
106: ">,x,z,_"
107: "jump,_,_,_"
108: "=,x,_,m"
109: "jump,_,_,_"
110: ">,y,x,_"
111: "jump,_,_,_"
112: ">,y,z,_"
113: "jump,_,_,_"
114: "=,y,_,m"
115: "jump,_,_,_"
116: "=,z,_,m"
117: "ret,m,_,_"
118: "end_block,max3,_,_"
119: "begin_block,divides,_,_"
120: "+,counterFunctionCalls,1,T_1"
121: "=,T_1,_,counterFunctionCalls"
122: "//,y,x,T_2"
123: "*,T_2,x,T_3"
124: "==,y,T_3,_"
125: "jump,_,_,_"
126: "ret,1,_,_"
127: "jump,_,_,_"
128: "ret,0,_,_"
129: "end_block,divides,_,_"
130: "begin_block,isPrime,_,_"
131: "+,counterFunctionCalls,1,T_4"
132: "=,T_4,_,counterFunctionCalls"
133: "=,2,_,i"
134: "<,i,x,_"
135: "jump,_,_,_"
136: "call,divides,_,_"
137: "par,i,_,_"
138: "par,x,_,_"
139: "==,divides,1,_"
140: "jump,_,_,_"
141: "ret,0,_,_"
142: "jump,_,_,_"
143: "+,i,1,T_5"
144: "=,T_5,_,i"
145: "jump,_,_,134"
146: "ret,1,_,_"
147: "end_block,isPrime,_,_"
148: "begin_block,main,_,_"
149: "=,0,_,counterFunctionCalls"
150: "in,_,_,_"
151: "out,_,_,_"
152: "out,_,_,_"
153: "call,max3,_,_"
154: "par,5,_,_"
155: "par,2,_,_"
156: "par,1,_,_"
157: "=,1,_,i"
158: "<=,i,12,_"
159: "jump,_,_,_"
160: "out,_,_,_"
161: "call,isPrime,_,_"
162: "par,i,_,_"
163: "+,i,1,T_6"
164: "=,T_6,_,i"
165: "jump,_,_,158"
166: "out,_,_,_"
167: "halt,_,_,_"
168: "end_block,main,_,_"
169: "end_block,program,_,_"
